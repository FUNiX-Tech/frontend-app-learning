@import "~@edx/brand/paragon/fonts";
@import "~@edx/brand/paragon/variables";
@import "~@edx/paragon/scss/core/core";
@import "~@edx/brand/paragon/overrides";

@import "~@edx/frontend-component-footer/dist/footer";
@import "https://askmentor.funix.edu.vn/hf40-livechat/hf40-livechat.css";
@import "https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css";

:root {
  //loading
  --bg-color-loading: #ececec;
}

#root {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
  font-size: 1.08rem;
  main {
    flex-grow: 1;
  }

  header {
    flex: 0 0 auto;

    .logo {
      display: block;
      box-sizing: content-box;
      position: relative;
      top: 0.1em;
      height: 1.75rem;
      margin-right: 1rem;
      img {
        display: block;
        height: 100%;
      }
    }
  }

  footer {
    flex: 0;
  }

  // class css for position attribute
  .fixed-position {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    z-index: 1000;
    box-shadow: 0px 2px 4px -1px #0b0b0b0f, 0px 4px 6px -1px #0b0b0b1a;
  }

  .unset-position {
    position: unset;
  }
}

.course-tabs-navigation {
  border-bottom: solid 1px #eaeaea;

  .nav a,
  .nav button {
    &:hover {
      background-color: $light-400;
    }
  }

  .nav a {
    &:not(.active):hover {
      background-color: $light-400;
      border-bottom: none;
    }
  }
}

.nav-underline-tabs {
  margin: 0 0 -1px;

  .nav-link {
    border-bottom: 4px solid transparent;
    border-top: 4px solid transparent;
    color: $gray-700;

    // temporary until we can remove .btn class from dropdowns
    border-left: 0;
    border-right: 0;
    border-radius: 0;

    &:hover,
    &:focus,
    &.active {
      font-weight: $font-weight-normal;
      color: $primary-500;
      border-bottom-color: $primary-500;
    }
  }
}

.sequence-container {
  display: flex;
  flex-direction: column;
  flex-grow: 1;
  margin-bottom: 4rem;

  // On mobile, the unit container will be responsible
  // for container padding.
  @media (min-width: map-get($grid-breakpoints, "sm")) {
    width: 100%;
    margin-right: auto;
    margin-left: auto;
  }
}

.sequence {
  @media (min-width: map-get($grid-breakpoints, "sm")) {
    border-radius: 4px;
  }
}

.sequence-navigation {
  display: flex;

  @media (min-width: map-get($grid-breakpoints, "sm")) {
    margin: -1px -1px 0;
  }

  .btn {
    flex-grow: 1;
    display: inline-flex;
    border-radius: 0;
    border: solid 1px #eaeaea;
    border-left-width: 1;
    position: relative;
    font-weight: 400;
    padding: 0 0.375rem;
    height: 3rem;
    justify-content: center;
    align-items: center;
    color: $gray-500;
    white-space: nowrap;

    &:hover,
    &:focus,
    &.active {
      color: $gray-700;
    }

    &:focus {
      z-index: 1;
    }

    &.active {
      &:after {
        content: "";
        position: absolute;
        bottom: -1px;
        left: 0;
        right: 0;
        height: 2px;
        background: $primary;
      }
    }

    &.complete {
      background-color: #eef7e5 !important;
      color: $success;
    }

    // &:first-child {
    //   border-left-width: 1;
    // }

    // &:last-child {
    //   border-right-width: 0;
    // }
  }

  .sequence-navigation-tabs-container {
    flex-grow: 1;
    flex-shrink: 1;
    flex-basis: 100%;
    display: flex;
    // min-width 0 prevents the flex item from overflowing the parent container
    // https://dev.to/martyhimmel/quick-tip-to-stop-flexbox-from-overflowing-peb
    min-width: 0;
  }

  .sequence-navigation-tabs {
    overflow: hidden;
    .btn {
      flex-basis: 100%;
      min-width: 2rem;
    }
  }

  .sequence-navigation-dropdown {
    .dropdown-menu .btn {
      flex-basis: 100%;
      min-width: 4rem;
      padding-left: 1rem;
      padding-right: 1rem;
      display: inline-flex;
      align-items: center;
      justify-content: flex-start;
      border-right: 0;

      & + .btn {
        border-top: 0;
      }

      .unit-title {
        flex-grow: 1;
        text-align: left;
        overflow: hidden;
        min-width: 0;
        margin: 0 1rem;
        text-overflow: ellipsis;
        color: $gray-700;
      }

      &.active {
        .unit-icon {
          color: $primary-500;
        }

        &:after {
          content: "";
          position: absolute;
          bottom: 0px;
          left: 0px;
          top: 0px;
          right: auto;
          width: 2px;
          height: auto;
          background: $primary;
        }
      }
    }

    .dropdown-item {
      &.active {
        // This is un-doing the default react-bootstrap styling for active dropdown-item elements.
        background-color: transparent;
      }
    }
  }

  .previous-btn,
  .next-btn {
    border: 1px solid $light-400 !important;
    color: $gray-700;
    display: inline-flex;
    justify-content: center;
    align-items: center;

    $sm-breakpoint: map-get($grid-breakpoints, "sm");

    @media (max-width: calc(#{$sm-breakpoint} - 1)) {
      padding-top: 1rem;
      padding-bottom: 1rem;
    }

    @media (min-width: map-get($grid-breakpoints, "sm")) {
      min-width: fit-content;
      padding-left: 2rem;
      padding-right: 2rem;
    }
  }

  .previous-btn {
    border-left-width: 0;
    margin-left: 0;

    @media (min-width: map-get($grid-breakpoints, "sm")) {
      border-left-width: 1px;
      border-top-left-radius: 4px;
    }
  }

  .next-btn {
    border-left-width: 1px;
    border-right-width: 0;

    @media (min-width: map-get($grid-breakpoints, "sm")) {
      border-top-right-radius: 4px;
      border-right-width: 1px;
    }
  }
}

.unit-container {
  padding: 0 $grid-gutter-width 2rem;
  max-width: 1024px;
  margin-left: auto;
  margin-right: auto;

  @media (min-width: 830px) {
    padding-left: 40px;
    padding-right: 40px;
  }
}

.unit-iframe-wrapper {
  margin: 0 -20px 2rem;

  @media (min-width: 830px) {
    margin: 0 -40px 2rem;
  }
}

#unit-iframe {
  width: 100%;
  border: none;
  display: block;
}

.unit-navigation {
  display: flex;
  margin: 0 auto;
  gap: "26px";
  .previous-button,
  .next-button {
    white-space: nowrap;
    border-radius: 4px;

    &:focus:before {
      border-radius: 6px;
    }
  }

  .next-button {
    flex-basis: 15%;
    background: #2015ff;
    color: #eaeaea;
    border: none;
    &:hover {
      background-color: rgb(23, 26, 83);
      color: #eaeaea;
    }
  }

  .previous-button {
    flex-basis: 15%;
    border-color: rgb(32, 21, 255);
    color: rgb(32, 21, 255);
    &:hover {
      background-color: rgb(23, 26, 83);
      color: #eaeaea;
    }
  }
}

// This class forces any modals using 'modal-lti' as their dialogClassName to take up the whole
// window (retaining padding around the edge).  Bootstrap modals don't have a full-screen
// size like this.  Because of the hack below around react-focus-on's div, it would be better long-term to pull this into Paragon and perhaps call it "modal-full" or something like that.
.modal-lti {
  height: 100%;
  max-width: 100% !important;

  // I don't like this.  We need to set a height of 100% on a div created by react-focus-on, a
  // package we use in our Modal.  That div has no class name or ID, so instead we're uniquely
  // identifying it by based on a unique attribute it has which its siblings don't share.
  > div[data-focus-lock-disabled="false"] {
    height: 100%;
  }

  // Along with setting the height of modal-content's parent div from react-focus-on, we need to
  // set modal-content's height as well to get the modal to expand to full-screen height.
  .modal-content {
    height: 100%;
  }
}

.greyed-out {
  opacity: 0.3;
}

.locked-overlay {
  opacity: 0.3;
  pointer-events: none;

  &.grades {
    overflow: hidden;
    max-height: 852px;
    @media screen and (min-width: 992px) {
      max-height: 920px;
    }
  }
}

.raised-card {
  border: 0 !important;
  box-shadow: 0 0.0625rem 0.125rem rgba(0, 0, 0, 0.2) !important;
}

// Import component-specific sass files
@import "courseware/course/celebration/CelebrationModal.scss";
@import "courseware/course/sidebar/sidebars/notifications/NotificationIcon.scss";
@import "courseware/course/sequence/lock-paywall/LockPaywall.scss";
@import "shared/streak-celebration/StreakCelebrationModal.scss";
@import "courseware/course/content-tools/calculator/calculator.scss";
@import "courseware/course/content-tools/contentTools.scss";
@import "course-home/dates-tab/timeline/Day.scss";
@import "generic/upgrade-notification/UpgradeNotification.scss";
@import "generic/upsell-bullets/UpsellBullets.scss";
@import "course-home/outline-tab/widgets/ProctoringInfoPanel.scss";
@import "src/course-home/outline-tab/widgets/FlagButton.scss";
@import "course-home/progress-tab/course-completion/CompletionDonutChart.scss";
@import "course-home/progress-tab/grades/course-grade/GradeBar.scss";
@import "courseware/course/course-exit/CourseRecommendations";
@import "product-tours/newUserCourseHomeTour/NewUserCourseHomeTourModal.scss";

/** [MM-P2P] Experiment */
@import "experiments/mm-p2p/index.scss";

.container-xl {
  padding-left: 0px !important;
  padding-right: 0px !important;

  max-width: 95% !important;
}

.unit-container {
  max-width: none !important;
}

.learning-header {
  position: sticky;
  top: 0px;
  background-color: white;
  z-index: 99;
  box-shadow: 0px 2px 4px -1px #0b0b0b0f, 0px 4px 6px -1px #0b0b0b1a;
}

.learning-header .course-title-lockup span:first-child {
  padding-bottom: 5px;
  padding-top: 5px;
}

.learning-header .course-title-lockup span {
  padding-bottom: 5px;
}

// section list
#section-list-container > ol {
  // max-height: 50vh;
  overflow-y: auto;

  position: sticky;
  top: 10px;
}
#section-list-container {
  min-height: 600px;
}
.border-all {
  border: solid 1px #eaeaea;
  border-radius: 4px;
  padding-left: 0px !important;
  padding-right: 0px !important;

  margin-bottom: 3rem;
}

.sequence {
  position: relative;

  & #courseware-sequenceNavigation {
    // max-height: 50vh;
    overflow-y: auto;
    top: 0px;

    & button {
      background-color: white;
    }
  }
}

// css course clone udacity

html:root {
  --chakra-space-16: 4rem;
  --chakra-transition-easing-ease-in: cubic-bezier(0.4, 0, 1, 1);
  --chakra-transition-duration-normal: 200ms;
  --chakra-zIndices-low: 1;
  --chakra-colors-white: #ffffff;
  --chakra-shadows-base: 0px 1px 2px 0px #0b0b0b0f, 0px 1px 3px 0px #0b0b0b1a;
  --chakra-lineHeights-none: 100%;
  --chakra-fontSizes-md: 1rem;
  --chakra-sizes-12: 3rem;
  --chakra-colors-black: #0b0b0b;
  --chakra-space-2: 0.5rem;
  --chakra-colors-transparent: transparent;
  --chakra-sizes-full: 100%;
  --chakra-colors-gray-100: #f6f6f6;
  --chakra-radii-full: 9999px;
  --chakra-colors-gray-300: #c7c7c7;
  --chakra-shadows-lg: 0px 4px 6px -2px #0b0b0b0d, 0px 10px 15px -3px #0b0b0b1a;
}

.css-19dz5pz {
  display: flex;
  flex-direction: column;
  border-left-width: 1px;
  border-left-style: solid;
  border-left-color: var(--chakra-colors-gray-300);
  box-shadow: var(--chakra-shadows-lg);
  background: var(--chakra-colors-white);
  width: var(--chakra-sizes-full);
  height: var(--chakra-sizes-full);
  padding: 0px;
}

.css-1dntyew {
  display: none;
  flex-direction: column;
  border-left-width: 1px;
  border-left-style: solid;
  border-left-color: var(--chakra-colors-gray-300);
  box-shadow: var(--chakra-shadows-lg);
  background: var(--chakra-colors-white);
  width: var(--chakra-sizes-full);
  height: var(--chakra-sizes-full);
  padding: 0px;
}

.css-16kvbm {
  right: -30.5rem;
  position: fixed;
  width: 30.5rem;
  top: var(--chakra-space-16);
  bottom: 0px;
  transition-timing-function: var(--chakra-transition-easing-ease-in);
  transition-duration: var(--chakra-transition-duration-normal);
  transition-property: left, right;
  z-index: var(--chakra-zIndices-low);
}

.css-1bljlat {
  right: 0px;
  position: fixed;
  width: 30.5rem;
  top: 4.2rem;
  bottom: 0px;
  transition-timing-function: var(--chakra-transition-easing-ease-in);
  transition-duration: var(--chakra-transition-duration-normal);
  transition-property: left, right;
  z-index: var(--chakra-zIndices-low);
}

.css-14u8e49 {
  display: flex;
  flex-direction: column;
  margin-top: 0px;
  flex: 1 1 0%;
  padding-inline: 16rem 30.5rem;
  transition-timing-function: ease-in;
  transition-delay: 0s;
  transition-property: padding;
  transition-duration: var(--chakra-transition-duration-normal);
}

.css-1mjee9h {
  margin-top: 0px;
  flex: 1 1 0%;
  padding-inline: 0px 30.5rem;
  transition-timing-function: ease-in;
  transition-delay: 0s;
  transition-property: padding;
  transition-duration: var(--chakra-transition-duration-normal);
}

.css-jygthk {
  flex-direction: column;
  margin-top: 0px;
  flex: 1 1 0%;
  padding-inline: 16rem 0px;
  transition-timing-function: ease-in;
  transition-delay: 0s;
  transition-property: padding;
  transition-duration: var(--chakra-transition-duration-normal);
}

.css-11m367g {
  display: flex;
  flex-direction: column;
  flex: 1 1 0%;
  height: var(--chakra-sizes-full);
  background: var(--chakra-colors-gray-100);
  border-right-width: 1px;
  border-right-style: solid;
  border-color: var(--chakra-colors-gray-300);
}

.css-mtrik7 {
  position: absolute;
  left: calc(100% - 24px);
  z-index: var(--chakra-zIndices-low);
  background: var(--chakra-colors-white);
  transition: all 0.2s ease-in 0s;
  box-shadow: var(--chakra-shadows-base);
  transform: translateY(24px) rotate(180deg);
  border-radius: var(--chakra-radii-full);
}

.css-16e9fpx {
  left: 0px;
  position: fixed;
  width: 16rem;
  top: var(--chakra-space-16);
  bottom: 0px;
  transition-timing-function: var(--chakra-transition-easing-ease-in);
  transition-duration: var(--chakra-transition-duration-normal);
  transition-property: left, right;
  z-index: var(--chakra-zIndices-low);
}

.css-wc1vc9::before {
  content: "";
  position: absolute;
  width: 100%;
  height: 100%;
  background-color: var(--chakra-colors-transparent);
  border-radius: var(--chakra-radii-base);
  border-width: 2px;
  border-style: solid;
  border-image: initial;
  border-color: var(--chakra-colors-transparent);
  transition: all 0.1s ease 0s;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
}

.css-yeymkw {
  flex-direction: column;
  margin-top: 0px;
  flex: 1 1 0%;
  padding-inline: 0px;
  transition-timing-function: ease-in;
  transition-delay: 0s;
  transition-property: padding;
  transition-duration: var(--chakra-transition-duration-normal);
}

.css-17h1ao9 {
  left: -16rem;
  position: fixed;
  width: 16rem;
  top: var(--chakra-space-16);
  bottom: 0px;
  transition-timing-function: var(--chakra-transition-easing-ease-in);
  transition-duration: var(--chakra-transition-duration-normal);
  transition-property: left, right;
  z-index: var(--chakra-zIndices-low);
}

.css-dh1ib6 {
  position: absolute;
  left: calc(100% - 2px);
  z-index: var(--chakra-zIndices-low);
  background: var(--chakra-colors-white);
  transition: all 0.2s ease-in 0s;
  box-shadow: var(--chakra-shadows-base);
  transform: translateY(24px) rotate(0deg);
  border-radius: 0px 50% 50% 0px;
}

.css-wc1vc9 {
  display: inline-flex;
  appearance: none;
  -webkit-box-align: center;
  align-items: center;
  -webkit-box-pack: center;
  justify-content: center;
  user-select: none;
  position: relative;
  white-space-collapse: collapse;
  text-wrap: nowrap;
  vertical-align: middle;
  outline-offset: 2px;
  width: auto;
  line-height: var(--chakra-lineHeights-none);
  font-weight: 600;
  font-size: var(--chakra-fontSizes-md);
  height: var(--chakra-sizes-12);
  color: var(--chakra-colors-black);
  fill: rgb(32, 21, 255);
  box-shadow: rgb(32, 21, 255) 0px 0px 0px 2px inset;
  outline: transparent solid 2px;
  border-radius: 0px 50% 50% 0px;
  padding: var(--chakra-space-2);
  transition: all 0.2s ease 0s;
  border-color: currentcolor;
  background: var(--chakra-colors-transparent);
}

.css-1qz66c7 {
  display: none;
  flex-direction: column;
  flex: 1 1 0%;
  height: var(--chakra-sizes-full);
  background: var(--chakra-colors-gray-100);
  border-right-width: 1px;
  border-right-style: solid;
  border-color: var(--chakra-colors-gray-300);
}

// css custtom styles figma

.btn-primary-custom {
  border: none;
  background-color: #0086ff !important;
  border-radius: 6px;
  padding: 6px 16px;
  color: white;
  &:hover {
    background-color: #0b70df !important;
  }
  span {
    size: 13px;
    line-height: 20px;
    font-weight: 600;
  }
}
.btn-primary-custom-outline {
  background: none !important;
  border: 1px solid #0086ff;
  border-radius: 6px;
  padding: 6px 16px;
  &:hover {
    background-color: #eff7ff !important;
  }
  span {
    color: #0086ff;
    line-height: 20px;
    font-weight: 600;
    size: 16px;
  }
}
